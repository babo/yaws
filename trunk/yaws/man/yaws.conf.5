.TH YAWS.CONF "5" "" "" "User Commands"
.SH NAME
/etc/yaws.conf \- Configuration file for the yaws webserver
.SH DESCRIPTION
.\" Add any additional description here
.PP
Yaws is fast lightweight webserver. It reads a configuration file called
yaws.conf to control its operations. The configuration contains two distinct
parts a global part which affects all the virtual hosts and a server part
where options for each virtual host is supplied.

.SH GLOBAL PART
.TP
\fB\logdir = Directory\fR
All yaws logs will be written to files in this directory. There are several
different log files written by yaws.

.br
\fBreport.log\fR - this is a text file that contains all error logger 
printouts from yaws. 
.br
\fBHost.access\fR - for each virtual host served by yaws, a file Host.access
will be written which contains an access log in Common Log Format.
.br
\fBtrace.http\fR - this file contains the HTTP trace if that is enabled
.br
\fBtrace.traffic\fR - this file contains the traffic trace if that is enabled


.TP
\fB ebin_dir = Directory\fR
This directive adds Directory to the erlang search path. It is possible to
have several of these command in the configuration file.
.TP
\fB include_dir = Directory\fR
This directive adds Directory to the path of directories where the erlang
compiler seraches for include files. We need to use this if we want to 
include .hrl files in our yaws erlang code.
.TP
\fB max_num_cached_files = Integer\fR
Yaws will cache small files such as commonly accessed GIF images in RAM.
This directive sets a maximum number on the number of cached files.
The default value is 400.
.TP 
\fB max_num_cached_bytes = Integer\fR
This directive controls the total amount of RAM which can maximally be
used for cached RAM files. The default value is 1000000, 1 megabyte.
.TP
\fB max_size_cached_file = Integer\fR
This directive sets a maximum size on the files that are RAM cached by yaws.
The default value i 8000, 8 kBytes.
.TP
\fB cache_refresh_secs = Integer\fR
The RAM cache is used to serve pages that sit in the cache. An entry sits in
cache at most cache_refresh_secs number of seconds. The default is 30. This means that when the content is updated under the docroot, that change doesn't show
until 30 seconds have passed. While developing a yaws site, 
it may be convenient to set this value to 0. If the debug flag (-d) is apssed
to the yaws start script, this value is automatically set to 0.

.TP
\fB trace  = traffic | http\fR
This enables traffic or http tracing. Tracing is also possible to enable with
a command line flag to yaws.
.SH SERVER PART
Yaws can virthost several webservers on the same ip address as well
as several webservers on different ip addresses. The on limitation here is
that there can be only one server with ssl enabled per each individual ip address.
.pp
Each virttual host is defined within a matching pair of \fB<server ServerName>\fR
and \fB</server>\fR. The ServerName will be the name of the webserver.

.pp
The following directives are allowed inside a server definition.
.TP
\fBport = Port \fR
This makes the server listen on Port
.TP
\fB listen = IpAddress\fR
This makes the server listen on IpAddress
When virthosting several servers on the same ip/port address, if the
browser doesn't sebd a Host: field, yaws will pick the \fIfirst\fR
server specified in the config file
.TP
.TP
\fBaccess_log = true | false\fR
Setting this directive to false turns of traffic logging for this
virtual server. The default value is true. 

\fB docroot = Directory\fR
This makes the server serve all its content from Directory

.TP
\fBpartial_post_size = Integer\fR
When a yaws file receives large POSTs, the amount of data received
in each chunk is determined by the this parameter.
The deafult value is 10240.


.TP
\fBtilde_expand = true|false \fR
If this value is set to false yaws will never
do tilde expansion. The default is true. tilde_expansion is the
mechanism whereby a URL ob the form http://www.foo.com/~username
is changed into a request where the docroot for that
particular request is set to the directory ~username/public_html/
The default value is true.

.TP
\fBappmods = [ListOfModuleNames]\fR
If any the names in ListOfModuleNames appear as components in the
path for a request, the path request parsing will terminate and
that module will be called.

Assume for example that we have
the URL http://www.hyber.org/myapp/foo/bar/baz?user=joe 
while we have the module foo defined as an appmod, the 
function foo:out(Arg) will be invoked
instead of searching the filesystems below the point foo.

The Arg argument will have the missing path part supplied in its
appmoddata field. 



.TP
\fB ssl = true \fR
This enables ssl for this server
.TP
\fB ssl_keyfile = File\fR
Specifies which file contains the private key for the certificate.
.TP
\fB ssl_certfile = File\fR
Specifies which file contains the certificate for the server.
.TP
\fB ssl_cacertfile = File\fR
File If the server is setup to require client certificates. This file needs to contain all the certificates of the acceptable signers for the client certs.
.TP
\fB ssl_verify = 1 | 2 | 3\fR
Specifies the level of verification the server does on clinet certs. 1 means nothing, 2 means the the server will ask the client for a cert but not fail if the client doesn't supply a client cert, 3 means that the server requires the client to supply a client cert.
.TP
\fB ssl_depth = Int\fR
Specifies the depth of certificate chains the server is prepared to follow when verifying client certs.
.TP
\fB ssl_password = String\fR
String If the private key is encrypted on disc, this password is the 3des key to decrypt it.

.TP
\fB ssl_ciphers = String\fR
* This string specifies the ssl cipher string. The syntax of the ssl cipher string is a little horrible sublanguage of its own. It is documented in the ssl man page for "ciphers". 


.TP
\fB<auth> ... </auth>\fR
Defines an auth structure. The following items are allowed
within a matching pair of <auth> and </auth> delimiters.

.TP
\fBdir = Dir\fR
Makes Dir to be controlled bu WWW-authenticate headers. In order for
a user to have access to WWW-Authenticate controled directory, the user
must supply a password.

.TP
\fBrealm = Realm\fR
In the directory defined here, the WWW-Authenticate Realm is set to
this value. 

.TP
\fBuser = User:Password\fR
Inside this directory, the user User has access if the user supplies
the password Password in the popup dialogue presented by the browser.
We can obviouslu have several of these value inside a single <auth> </auth>
pair.




.SH EXAMPLES

The following example defines a single server on port 80.
.nf

logdir = /var/log/yaws
<server www.mydomain.org>
        port = 80
        listen = 192.168.128.31
        docroot = /var/yaws/www
</server>
.fi

.pp
And this example shows a similar setup but two webservers on the same ip address

.nf

logdir = /var/log/yaws
<server www.mydomain.org>
        port = 80
        default_server_on_this_ip = true
        listen = 192.168.128.31
        docroot = /var/yaws/www
</server>

<server www.funky.org>
        port = 80
        listen = 192.168.128.31
        docroot = /var/yaws/www_funky_org
</server>


.fi


.nf
An example with www-authenticate and no access logging at all.

logdir = /var/log/yaws
<server www.mydomain.org>
        port = 80
        listen = 192.168.128.31
        docroot = /var/yaws/www
        access_log = false
        <auth>
            dir = /var/yaws/www/secret
            realm = foobar
            user = jonny:verysecretpwd
            user = benny:thequestion
            user = ronny:havinganamethatendswithy
       </auth>

</server>





.fi


And finally a sligthly more complex example
with two servers on the same ip, and one ssl server on a
different ip.

.nf

logdir = /var/log/yaws
max_num_cached_files = 8000
max_num_cached_bytes = 6000000

<server www.mydomain.org>
        port = 80
        default_server_on_this_ip = true
        listen = 192.168.128.31
        docroot = /var/yaws/www
</server>



<server www.funky.org>
        port = 80
        listen = 192.168.128.31
        docroot = /var/yaws/www_funky_org
</server>

<server www.funky.org>
        port = 443
        listen = 192.168.128.32
        docroot = /var/yaws/www_funky_org
        ssl = true
        ssl_keyfile = /etc/funky.key
        ssl_cerfile = /etc/funky.cert
        ssl_password = gazonk
</server>


.fi

.SH AUTHOR
Written by Claes Wikstrom
.SH "SEE ALSO"
.BR yaws (1)
.BR erl (1)

