
<erl>

out(A) -> 
    yaws_api:ssi(A#arg.docroot, ["/HEAD", "/TOPTAB"]).

	    
</erl>


<h2>Build and install</h2>

Yaws is hosted by the excellent source code site SourceForge <a href="http://sourceforge.net"><img src="http://sourceforge.net/sflogo.php?group_id=45637&type=1" width="88" height="31" border="0" alt="SourceForge.net Logo"></a>. 
The Yaws SourceForge www page is <a href="http://sourceforge.net/projects/erlyaws/">http://sourceforge.net/projects/erlyaws</a>


<p>To cvs check out the latest source first install 
an <a href="http://www.erlang.org">Erlang</a> system, then do:


<erl>
out(A) -> yaws_api:pre_ssi_string("
# export CVS_RSH=ssh 
# export CVSROOT=:pserver:anonymous@cvs.erlyaws.sourceforge.net:/cvsroot/erlyaws
# cvs  login
# cvs -z3 co .
# cd yaws; make; make install
").

</erl>

The above commands will 
checkout the bleeding edge source, build it and install it at
127.0.0.1:80 with the docroot set to the local documentation.

<p>Just <tt>make</tt> (without install) 
will build the yaws system and do a local
install at http://127.0.0.1:8000. This is the typical mode of operation
while either just trying out yaws, or hacking yaws. This will install
a template configuration file <tt>yaws.conf</tt> in $HOME.
If $HOME/yaws.conf exists, the old file will not be overwritten.
<p>A yaws executable will be written into the yaws bin directory.

<p>To run a locally installed system, we run the yaws script found in the
bin directory in the source code tree.

<p>
<tt> make install</tt> will also build the yaws system and also 
install it in /usr/local. A configuration file /etc/yaws.conf will
also be installed unless the file already exists. The default config
file will set up the system to listen on http://127.0.0.1:80

<p>Yaws currently doesn't come with a configure script. (it's not
neecessary). To install someplace else than in /usr/local, edit the
include.mk file in the the toplevel directory.

<h2>Running yaws </h2>
<p>The yaws executable is a shell script which invokes the 
erlang system and instructs it to start yaws.
The command line flags for yaws are documented in 
<a href="man.yaws?page=yaws.conf"> man page for <tt>yaws (1)</tt> </a>

<p>When developing yaws code, the interactive mode is ideal. Typically
yaws is then started as: 
<br>
<pre>
# yaws -i -d
</pre>


<H2>Configuring Yaws</h2>

Web server configuration can be supplied to yaws 
in either of two ways depending
on wheter we run yaws as a standalone daemon or if we run yaws as an
embedded application inside another Erlang program.

<h3>Daemon mode</h3>

The yaws configuration is described in 
<a href="man.yaws?page=yaws.conf"> man page for <tt>yaws.conf (5)</tt> </a>



<h3>Embedded mode</h3>

Not documented.


<erl>
out(A) -> yaws_api:ssi(A#arg.docroot, ["/END"]).
</erl>
