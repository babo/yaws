


<erl>

out(A) -> 
    yaws_api:ssi(A#arg.docroot, ["/HEAD", "/TOPTAB"]).

</erl>



<H2>Yaws</H2>


Yaws is a HTTP 1.1
webserver currently under rapid development. 
Two separate modes of operations are supported.
<br>
<ul>
<li> Standalone mode where yaws runs as a regular webserver daemon. This is the default mode.
<li> Embedded mode wher Yaws runs as an embedded webserver in an
another erlang application. 
</ul>

<br>
Yaws is entirely written in <a href="http:www.erlang.org">Erlang</a>, 
futhermore it is a multithreaded webserver where one Erlang light weight 
process is used to handle each client.
<br>

Yaws has excellent capabilies to generate dynamic content. Erlang code
can be embedded into the HTML code in manner similar 
to <a href="http://www.php.net">php</a>. As matter of fact, the 
ad-hockery of php was one of major reasons I started the Yaws project.



<p>
<h2>yaws.hyber.org</h2>

The homepage of Yaws is <a href="http://yaws.hyber.org">yaws.hyber.org</a>.
Statistics for that site is obtained by a yaws page that directly interacts 
with the server producing <a href="http://www.hyber.org/stats.yaws">stats</a>.
<p>
The documentation, examples as well as releases can be found there, and 
of cource, <a href="http://yaws.hyber.org">yaws.hyber.org</a> is itself
powered by Yaws.



<erl>
out(A) -> yaws_api:ssi(A#arg.docroot, ["/END"]).
</erl>
