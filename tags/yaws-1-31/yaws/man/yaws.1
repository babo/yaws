.TH YAWS "1" "" "" "User Commands"
.SH NAME
yaws \- yet another webserver
.SH SYNOPSIS
.B yaws
[\fIOPTIONS\fR] 
.SH DESCRIPTION
.\" Add any additional description here
.PP
Yaws is fast lightweight webserver. It can run as daemon or
in interactive mode where it is possible to directly interact 
with the webserver. Yaws is particularly good at generating
dynamic content. See the user docs for more information on that topic.

.TP
\fB\-i\fR
Interactive mode. This will start yaws in interactive mode with an erlang
prompt. All error_logger messages will be written to the tty as well in this
mode. Use this when developing yaws code.
.TP
\fB\-D\fR
Daemon mode. This will start yaws as a daemon.
.TP
\fB\-heart\fR
This will cause the yaws system to be automatically restarted
in case it should crash. This switch also require the \fI-D\fR
switch to be present.
.TP
\fB\-d\fR
Debug mode. This will produce some auxilliary error output for some
error conditions. The interactive option \fI-i\rR implies debug mode.
.TP
\fB\-c file\fR
Use a different configuration file than the default. The default configuration file
when running as root is /etc/yaws.conf. When running as a non priviliged user, yaws
will search for its configuration file in the following order. First in
$HOME/yaws.conf, then in ./yaws.conf and finally in /etc/yaws.conf
.TP
\fB\-r module\fR
Tells yaws to call \fImodule:start/0\fR at startup. This makes it possible
to startup user specific applications together with yaws.
.TP
\fB\-t\fR
Traffic trace mode. All traffic will be written to a trace file called trace.traffic
in the log directory.
.TP
\fB\-T\fR
HTTP trace mode. All HTTP messages will be written to a trace file called trace.http
in the log directory.

.TP
\fB\-x\fR
When yaws is put into trace mode using either -T or -t, traces are written to files. If we provide the -x flag, the trace will also be written to stdout. 

.TP
\fB\-M dir\fR
Start Mnesia in directory <dir>

.TP
\fB\-sname xxx\fR
Start yaws as a distributed erlang node with name <xxx>

.TP
\fB\-h\fR
HUP the daemon. This forces the daemon to reread the configuration file. It also makes
the daemon empty all its internal content caches. Hence when updating the doc root,
HUPing the daemon is the fastest way to see the content updates. 
.TP
\fB\-s\fR
Stop the daemon.
.TP
\fB-S\fR
Query a running yaws daemon for its status, and print it.
.TP
\fB-load Modules\fR 
Try to (re)load erlang modules into a running daemon.  This is useful
after modifying appmods or modules used by scripts.
.TP
\fB-check YawsFile [IncDirs]\fR
Test compile a `.yaws' file.
.TP
\fB\-v\fR
output version information and exit
.SH AUTHOR
Written by Claes Wikstrom
.SH "SEE ALSO"
.BR yaws.conf (5)
.BR erl (1)

