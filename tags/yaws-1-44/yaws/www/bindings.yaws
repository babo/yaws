<erl>
out(A) ->
    [{ssi, "HEAD", [],[]},
     {ssi, "EXHEAD", [],[]}].
</erl>


<p>
Bindings are the opposite of <a href="ssi.yaws"> Server Side Includes (SSI)</a>.
SSI is used when entire pages are written largely in EHTML and
snippets of HTML, or more typically javascript code is inserted into the EHTML 
code.

<p> Bindings are used the other way around. Essentially entire 
pages are written in regular HTML but parts of the HTML needs to be 
dynamically generated.

<p>The yaws callback out/1 can return 

<div class="box"> 
<pre>
{bindings, [{Key1, Value2}, {Key2, Value2} .....]}. 
</pre>
</div>


<p>All bindings can then be used in the rest of yaws code (in HTML source and
within erl tags). In HTML source %%Key%% is expanded to Value and
within erl tags yaws_api:get_binding(Key) can be used to extract Value.

<p>With the binding feature it is easier to write transparent yaws code making
it easier to to work together with Web people knowing little or
nothing about Erlang.

An example:


<div class="box"> 
<pre>

&lt;erl&gt;
out(A) -&gt; {bindings, [{"A", "foo"}, {"B", "baz"}]}.
&lt;/erl&gt;

&lt;html&gt;
  &lt;body&gt;
    &lt;p&gt;%%A%%&lt;/p&gt;
    &lt;p&gt;&lt;font size="4"&gt;%%A%% != %%B%%&lt;/font&gt;&lt;/p&gt;
    &lt;p&gt;An enormous amount of plain html source here.&lt;/p&gt;

&lt;erl&gt;
out(A) -&gt;
    Value = yaws_api:binding("A"),
    {ehtml, {ul, [],
             [{li, [],
               Value},
              {li, [],
               "gazonk"}]}}.
&lt;/erl&gt;

%%A%% = %%A%% (hit me)
&lt;/body&gt;
&lt;/html&gt;
</pre>
</div>


<p>
Which expands to:

<div class="box"> 
<pre>



&lt;html&gt;
&lt;body&gt;
&lt;p&gt;foo&lt;/p&gt;
&lt;p&gt;&lt;font size="4"&gt;foo != baz&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;An enormous amount of plain html source here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;foo&lt;/li&gt;
&lt;li&gt;gazonk&lt;/li&gt;&lt;/ul&gt;

foo = foo (hit me)



</pre>
</div>


And is rendered as:
<div class="box"> 
<p>foo</p>
<p><font size="4">foo != baz</font></p>
<p>An enormous amount of plain html source here.</p>

<ul>
<li>foo</li>
<li>gazonk</li></ul>

foo = foo (hit me)
</div>





</html>




