###-*-makefile-*-   ; force emacs to enter makefile-mode


ERL=@ERL@
ERLC=@ERLC@

EMULATOR=beam


ifdef debug
  ERLC_FLAGS+=-Ddebug
endif

ifdef trace
  ERLC_FLAGS=+trace
endif

ifdef export_all
  ERLC_FLAGS+=-Dexport_all
endif

SYSTEM_NAME=bir
SYSTEM_VSN=2.3$(SERIALNO)

# changed by the make OS thingie on a per branch bases
ISD_OS_VSN=1.3.3

ISDA_SYSTEM_VSN=1.0$(SERIALNO)
ISDA_SYSTEM_NAME=isda
ISDA_PRODUCT_NAME=AKA
# which version of the OS does this isda need
ISDA_OS_VSN=$(ISD_OS_VSN)

ISDM_SYSTEM_VSN=1.1$(SERIALNO)
ISDM_SYSTEM_NAME=isdm
ISDM_PRODUCT_NAME=BMR
# which version of the OS does this isdm need
ISDM_OS_VSN=$(ISD_OS_VSN)

ISDSSL_SYSTEM_VSN=3.0.2$(SERIALNO)
ISDSSL_SYSTEM_NAME=isdssl
ISDSSL_PRODUCT_NAME=SSL
# which version of the OS does this isdssl need
ISDSSL_OS_VSN=$(ISD_OS_VSN)

ISDO_SYSTEM_VSN=1.1.6$(SERIALNO)
ISDO_SYSTEM_NAME=isdo
ISDO_PRODUCT_NAME=IOP
# which version of the OS does this isda need
ISDO_OS_VSN=$(ISD_OS_VSN)

DNS_SYSTEM_VSN=0.99

CC=@CC@
CFLAGS=@CFLAGS@
LINKER=@LINKER@
LDFLAGS=@LDFLAGS@
WIN32=@WIN32@
BSDI=@BSDI@
EXE=@EXE@
DLL=@DLL@
OBJ=@OBJ@
OUT=@OUT@
FPIC=@FPIC@
ERL_DLL_LIB=@ERL_DLL_LIB@
OS=@OS@
STRIP=@STRIP@
LIBS=@LIBS@
SSL_LIB_DIR=@SSL_LIB_DIR@
SSL_INC_DIR=@SSL_INC_DIR@
SWIFT=@SWIFT@

ERLDIR=@ERLDIR@
ERL_INTERFACE_LIB=@ERL_INTERFACE_LIB@
ERL_INTERFACE_LIBS=@ERL_INTERFACE_LIBS@
ERL_INTERFACE_INCLUDE=@ERL_INTERFACE_INCLUDE@

LD_SHARED=@LD_SHARED@

LDFLAGS +=-L$(ERL_INTERFACE_LIB)

INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@

JAVAC=javac
CLASSPATH=.:/usr/local/pgm/swing/swing.jar:/usr/local/pgm/jdk/lib/classes.zip:/opt/local/pgm/swing/swing.jar:/opt/local/pgm/jdk/lib/classes.zip
JAVAC_FLAGS=-classpath $(CLASSPATH)

# Hmm, don't know if you are supposed to like this better... ;-)
APPSCRIPT = '$$vsn=shift; $$mods=""; while(@ARGV){ $$_=shift; s/^([A-Z].*)$$/\'\''$$1\'\''/; $$mods.=", " if $$mods; $$mods .= $$_; } while(<>) { s/%VSN%/$$vsn/; s/%MODULES%/$$mods/; print; }'

# Targets

../ebin/%.app: %.app.src ../vsn.mk Makefile
	perl -e $(APPSCRIPT) "$(VSN)" $(MODULES) < $< > $@

../ebin/%.appup: %.appup 
	cp $< $@

../ebin/%.$(EMULATOR): %.erl
	$(ERLC) -b $(EMULATOR) $(ERLC_FLAGS) -o ../ebin $<

%.$(EMULATOR): %.erl
	$(ERLC) -b $(EMULATOR) $(ERLC_FLAGS) $<

%.obj:	%.c
	$(CC) $(CFLAGS) -c $<

%.o:	%.c
	$(CC) $(CFLAGS) -c $<

../priv/%.class: %.java
	$(JAVAC) $(JAVAC_FLAGS) -d ../priv $<

iSD_%_rdt.erl:	%.rdt
	$(ERL) -noinput -pa ../../reg/ebin -pa ../../misc/ebin -s reg_xml to_module_halt $<

../priv/iSD_%_cli.beam:	%.cli ../../cli/src/cli.hrl
	$(ERL) -noinput -pa ../../misc/ebin -pa ../../cli/ebin -s cli_xml_parse cmdline compile $< ../priv

../priv/iSD_%_csp.beam:	%.csp
	$(ERL) -noinput -pa ../../misc/ebin -pa ../../cli/ebin -s cli_xml_parse cmdline compile_csp $< ../priv

%_clnt.erl:	%.x
	../../rpc/priv/erpcgen -a '[clnt]' $< 

%_svc.erl:	%.x
	../../rpc/priv/erpcgen -a '[svc]' $< 

%_xdr.erl:	%.x
	../../rpc/priv/erpcgen -a '[xdr]' $< 
